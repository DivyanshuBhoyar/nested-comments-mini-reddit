// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id       String    @id @default(uuid())
  title    String
  body     String
  comments Comment[]
}

model User {
  id       String    @id @default(uuid())
  name     String
  comments Comment[]
  likes    Like[]
}

model Comment {
  id        String   @id @default(uuid())
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  postId   String?
  userId   String?
  parentId String?
  likes    Like[]
  // self join parentId is a key | relation name is used
  children Comment[] @relation("ParentChild")
  parent   Comment?  @relation("ParentChild", fields: [parentId], references: [id], onDelete: Cascade)
  post     Post?     @relation(fields: [postId], references: [id], onDelete: Cascade)
  user     User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// like table -- contains foreign keys userId and comment Id
// and composite primary key
model Like {
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  comment Comment @relation(fields: [commentId], references: [id])

  userId    String
  commentId String

  @@id([userId, commentId])
}
